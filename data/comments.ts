import { illustration, paragraph, sentence, link, section, article, note, list, ref, fig, neg, kw, cm, cpp, c, f, v, lt, js, emp, code, cs, py, lts, sen, p, ts, rg } from "../classes/shortcuts";

const code_1 = illustration(paragraph(`Ось так могли б виглядати коментарі в JSON. `, `Зручно ж, правда? `), code(`JSON`, ...[
    [ `{` ],
    [ `  /**` ],
    [ `   * - "commonjs" - модулі CommonJS.` ],
    [ `   *   Використовують об'єкти require та module.exports.` ],
    [ `   * - "esnext" - модулі ECMAScript.` ],
    [ `   *   Використовують службові слова import та export.` ],
    [ `   */` ],
    [ `  "module": "commonjs"` ],
    [ `}` ],
]))
const code_2 = illustration(`А ось так можна було б тримати в одному файлі різні налаштування, без потреби змінювати файл. `, code(`JSON`, ...[
    [ `{` ],
    [ `  "server": {` ],
    [ `    "protocol": "http",` ],
    [ `    "hostname": "first-domain.com",` ],
    [ `    "username": "username1",` ],
    [ `    "password": "password1"` ],
    [ `  }` ],
    [ `  /*` ],
    [ `  // альтернативні налаштування` ],
    [ `  "server": {` ],
    [ `    "protocol": "https",` ],
    [ `    "hostname": "second-domain.com",` ],
    [ `    "username": "username2",` ],
    [ `    "password": "qwerty"` ],
    [ `  }` ],
    [ `  */` ],
    [ `}` ],
]))
const code_2a = illustration(`А ось так можна було б тримати в одному файлі різні налаштування, без потреби змінювати файл. `, ts(...[
    [ `// читання JSON` ],
    [ `const json = await readJson('data.json')` ],
    [ `` ],
    [ `// запис JSON` ],
    [ `await writeJson('data.json', json)` ],
    [ `` ],
    [ `// все, коментарі знищено` ],
]))
const code_3 = illustration(`Приклад форматування, яке не буде відновлене після циклу читання-запису. `, code(`JSON`, ...[
    [ `[` ],
    [ `  { "username" : "user1",` ],
    [ `    "email"    : "user123@email.com"` ],
    [ `    "age"      : 25` ],
    [ `    "gender"   : "male"` ],
    [ `  },` ],
    [ `  { "username" : "user2",` ],
    [ `    "email"    : "heli@copter.com"` ],
    [ `    "age"      : 12` ],
    [ `    "gender"   : "attack helicopter"` ],
    [ `  }` ],
    [ `]` ],
]))
const code_4 = illustration(`В XML/HTML немає коментарів для окремих рядків. `, code(`XML`, ...[
    [ `<root>` ],
    [ `  <!--` ],
    [ `    ось так коментувати можна` ],
    [ `  -->` ],
    [ `  // а ось так - ні` ],
    [ `</root>` ],
]))
const code_5 = illustration(paragraph(sen(`В CSS послідовність `, code(`CSS`, cm(`//`)), ` коментує інструкцію, а не рядок. `), sen(`Ось це так несподіванка! `)), code(`CSS`, ...[
    [ `/* тут // вимикає весь body */` ],
    [ `// body {` ],
    [ `  width: 100%;` ],
    [ `  height: 100%;` ],
    [ `}` ],
]))
const code_6 = illustration(``, js(...[
    [ `/*` ],
    [ `  початок вкладеного коментаря` ],
    [ `  /*` ],
    [ `    вкладений коментар` ],
    [ `  */` ],
    [ `  тут мав би бути кінець вкладеного коментаря,` ],
    [ `  але буде помилка` ],
    [ `*/` ],
]))
const code_7 = illustration(``, js(...[
    [ `/*` ],
    [ `const x = "стрічка з */ ламає синтаксичний аналізатор"` ],
    [ `*/` ],
]))
const code_8 = illustration(`Чомусь в Haskell все працює як треба. `, code(`Haskell`, ...[
    [ `{-` ],
    [ `  зовнішній коментар` ],
    [ `  {-` ],
    [ `    внутрішній коментар` ],
    [ `  -}` ],
    [ `  зовнішній коментар` ],
    [ `-}` ],
]))
const code_9 = illustration(paragraph(`Kotlin теж так вміє. `, `А С++ - ні. `), code(`Kotlin`, ...[
    [ `/*` ],
    [ `  зовнішній коментар` ],
    [ `  /*` ],
    [ `    внутрішній коментар` ],
    [ `  */` ],
    [ `  зовнішній коментар` ],
    [ `*/` ],
]))
const code_10 = illustration(`Багаторівневі коментарі в Lua`, code(`Lua`, ...[
    [ `--[=[` ],
    [ `  зовнішній коментар` ],
    [ `  --[==[` ],
    [ `    внутрішній коментар` ],
    [ `  ]==]--` ],
    [ `  зовнішній коментар` ],
    [ `]=]--` ],
]))

export default article([ `Думки вголос. `, `Коментарі. ` ], { created : new Date(`2022-02-03T01:49:23.155Z`) }, ...[
    section(`Усі забули про коментарі. `, ...[
        paragraph(...[
            sentence(`Не зважаючи на сьогоднішній стрімкий розвиток мов та їх окремих складових, навряд чи це ж можна сказати і про коментарі в мовах. `),
            sentence(`Таке враження, наче всі про них забули. `),
            sentence(`А дарма, адже коментарі - це потужний інструмент в розробці. `),
            sentence(`Це не лише документація, а ще й засіб зневадження та можливість спростити деякі робочі моменти. `),
            sentence(`Одним словом, мене дістало, що розвитком коментарів нехтують і зараз я поясню чому. `),
        ]),
    ]),
    section(`Жити без коментарів можна, але сумно. `, ...[
        paragraph(...[
            sentence(`Найгірша можлива ситуація для мови - це повна відсутність в ній коментарів. `),
            sentence(`І JSON чудовий цьому приклад. `),
            sentence(`Простота зробила його чи не стандартним форматом для різноманітного роду конфігураційних файлів і повідомлень, але неможливість додавати коментарі створює величезні незручності в роботі з ним. `),
            sentence(`Без них неможливо ні додати нотатки стосовно того чи іншого поля, ні перелічити його можливі значення (див. `, code_1, `), ні тримати в коді альтернативні, наперед заготовані конфігурації (див. `, code_2, `). `),
        ]),
        code_1,
        code_2,
        paragraph(...[
            sentence(`Аргументом проти додавання в JSON коментарів була неможливість їх однозначного збереження після читання з файлу. `),
            sentence(`Оскільки під час цього текст перетворюється у внутрішнє для мови представлення`, note(`Наприклад, набір об'єктів та примітивів JavaScript. `), ` інформація про коментарі та їх розміщення втрачається. `),
            sentence(`Відповідно, коментарі не лише буде неможливо використати при роботі з цим представленням, але й проста операція читання JSON з файлу і його ж збереження без внесення будь яких видимих змін буде видаляти з файлу коментарі (див. `, code_2a, `). `),
            sentence(`Для когось це може бути досить неочікувано. `),
        ]),
        code_2a,
        paragraph(...[
            sentence(`Але несправедливість полягає в тому, що цикл читання-запису в будь якому випадку видаляє з файлу деяку інформацію. `),
            sentence(`Наприклад, інформацію про форматування або закінчення рядків (див. `, code_3, `). `),
            sentence(`Якби JSON допускав коментарі то принципово нічого не змінилося б: він не перестав би бути однозначним форматом `, fig(`без втрат`), `. `),
            sentence(`Він ніколи таким і не був. `),
            sentence(`Але коментарями могли б принаймні скористатись ті, хто використовує JSON лише для читання. `),
        ]),
        code_3,
        paragraph(...[
            sentence(`В решті-решт ніхто не забороняє написати парсер, який зберігає форматування та коментарі і може відновити їх. `),
            sentence(`Але тепер пізно: JSON без коментарів роками використовується в найрізноманітніших програмах які перестануть працювати, якщо у ньому з'являться коментарі. `),
            sentence(`Декого це дратує настільки, що вони обирають новіші формати`, note(`Наприклад, JSON5. `), ` або використовують нестандартні парсери`, note(`Наприклад, TypeScript та ESLint допускають в своїх конфігураційних JSON файлах коментарі. `), `, які вміють розпізнавати коментарі. `),
        ]),
    ]),
    section(`Неповноцінні коментарі.`, ...[
        paragraph(...[
            sentence(`Навіть якщо в мові є коментарі, це ще не означає, що вони будуть зручними. `),
            sentence(`Особливо якщо йдеться про тимчасове вимикання тих чи інших частин коду для зневадження. `),
            sentence(`Мови HTML та XML схожі навіть в недоліках, адже обоє дозволяють лише коментарі для блоків: `, code(`HTML`, cm(`<!-- -->`)), ` (див. `, code_4, `). `),
            sentence(`Це робить їх схожими на теги, але аж ніяк не додає зручності. `),
            sentence(`Схожа проблема існує і в CSS, яка до певного моменту підтримувала лише коментарі для блоків `, code(`CSS`, cm(`/* */`)), ` і не вміла працювати з `, code(`CSS`, cm(`//`)), `. `),
            sentence(`Згодом така можливість з'явилась, але замість коментування рядків запис `, code(`CSS`, cm(`//`)), ` вимикає цілу конструкцію, перед якою з'являється (див. `, code_5, `). `),
            sentence(`Ось це справді неочікувано, на відміну від зникнення коментарів з JSON файлу! `),
        ]),
        code_4,
        code_5,
        paragraph(...[
            sentence(`Одні лише коментарі блоків можуть стати причиною використовувати замість CSS альтернативи, такі як SASS або LESS. `),
            sentence(`Але існують й обернені випадки: Python натомість підтримує лише коментарі для рядків `, py(cm(`#`)), `. `),
            sentence(`Звичайно, форматування відіграє важливу роль в цій мові, але все ж необхідність коментувати кожен окремий рядок навряд є тим, чим варто пишатись. `),
            sentence(`Це може працювати для ведення документації, але наскільки це зручно під час зневадження? `),
        ]),
    ]),
    section(`Недоліки, що передаються шляхом копіювання.`, ...[
        paragraph(...[
            sentence(`Одним з найбільш популярних стилів коментарів сьогодні є `, cpp(cm(`//`)), ` для рядків та `, cpp(cm(`/* */`)), ` для блоків. `),
            sentence(`Його можна зустріти в C, C++, C#, Java, JavaScript, TypeScript та багатьох інших мовах, які скопіювали синтаксис одна з одної. `),
            sentence(`Але разом зі стилем коментарів також було необдумано скопійовано усі їх недоліки. `),
        ]),
        paragraph(...[
            sentence(`Так, наприклад, в жодній з наведених вище мов неможливі вкладені коментарі, тобто конструкції `, cpp(cm(`/* */`)), ` всередині інших `, cpp(cm(`/* */`)), `. `),
            sentence(`Схожа ситуація склалась і в HTML/XML з їхніми `, code(`HTML`, cm(`<!-- -->`)), `, а також в CSS/SCSS, які запозичили коментарі в JavaScript. `),
            sentence(`Якщо спробувати закоментувати вже закоментований блок, то коментар зупиниться на першій же послідовності `, cpp(cm(`*/`)), `, а весь текст до наступної буде інтерпретований як помилка (див. `, code_6, `). `),
            sentence(`Це заважає поступово `, fig(`вимикати`), ` код під час зневаджування та коментувати великі шматки коду, який вже містить блокові коментарі. `),
            sentence(`Сьогодні IDE дозволяють спростити це за допомогою гарячих клавіш, які коментують виділені рядки. `),
            sentence(`Але це працює лише для коду який правильно розділений на рядки і усього цього можна було б уникнути, якби мови просто не мали такого промаху в дизайні. `),
        ]),
        code_6,
        paragraph(...[
            sentence(`Ще одна проблема таких коментарів це їх взаємодія зі стрічками. `),
            sentence(`Якщо на шляху блокового коментаря знайдеться стрічка з послідовністю `, cpp(cm(`*/`)), `, то коментар зупиниться на ній (див. `, code_7, `). `),
            sentence(`Використання символів `, cpp(cm(`/`)), ` та `, cpp(cm(`*`)), ` які є дуже близькими до решти мовних конструкцій має ще один небажаний наслідок: в таких мовах навряд чи колись з'явиться оператор ділення `, py(`//`), `, як в Python. `),
            sentence(`Це може звучати ще неприємніше якщо згадати, що в JavaScript є оператор піднесення до степеня `, js(`**`), ` і `, js(`//`), ` міг би виконувати обернену функцію - отримання кореня. `),
            sentence(`Також в коментарів JavaScript є неприємний перетин з регулярними виразами, які починаються і закінчуються через `, js(rg(`/`)), `. `),
            sentence(`Через це у виразах типу `, js(rg(`//home/projects/`)), ` символи `, js(rg(`/`)), ` потрібно екранувати за допомогою `, js(rg(`\\`)), `. `),
        ]),
        code_7,
    ]),
    section(`Винятки з правила.`, ...[
        paragraph(...[
            sentence(`Хтось може сказати, що коментарі не надто важливі для мов і всі ці недоліки нікого не обходять. `),
            sentence(`І це неправда! `),
            sentence(`Виявляється існують мови, в яких наведені вище проблем вирішені. `),
            sentence(`На відміну від С++ і купи інших вже згаданих мов, в Haskell з якоїсь невідомої причини зовсім немає проблем з вкладеними коментарями! `),
            sentence(`Ви можете розмістити один `, code(`Haskell`, cm(`{- -}`)), ` всередині іншого і коментарі будуть працювати як очікувано (див. `, code_8, `). `),
            sentence(`Вкладені коментарі підтримує і Kotlin (див. `, code_9, `), який теж запозичив `, cpp(cm(`/* */`)), ` в С++ але не полінувався виправити його недоліки. `),
        ]),
        code_8,
        code_9,
        paragraph(...[
            sentence(`Окремо варто згадати і про Lua, яка хоча і не підтримує вкладені коментарі, натомість реалізує концепцію `, fig(`багаторівневих`), `. `),
            sentence(`На відміну від популярних `, cpp(cm(`/* */`)), ` ліва та права частини блокового коментаря Lua - `, code(`Lua`, cm(`--[[ ]]`)), ` - можуть містити довільну кількість знаків `, code(`Lua`, cm(`=`)), ` всередині себе. `),
            sentence(`Блок закінчується тоді, коли знаходиться символ `, code(`Lua`, cm(`]]`)), ` з відповідною кількість таких знаків: `, code(`Lua`, cm(`--[=[`)), ` закривається `, code(`Lua`, cm(`]=]`)), `, `, code(`Lua`, cm(`--[====[`)), ` закривається `, code(`Lua`, cm(`]====]`)), ` і так далі (див. `, code_10, `). `),
            sentence(`Це дозволяє мати кілька `, fig(`рівнів`), ` коментарів, які гарантовано не заважатимуть один одному. `),
            sentence(`Такий підхід дуже схожий з сирими стрічками в С++, які також містять спеціальні маркери на початку (`, cpp(lts(`R"==(`)), `) та в кінці (`, cpp(lts(`)=="`)), `) стрічки. `),
        ]),
        code_10,
    ]),
    section(`Підсумки.`, ...[
        paragraph(...[
            sentence(`Коментарі необхідні. `),
            sentence(`Не лише як як засіб ведення документації та пояснення коду, але й як інструмент для роботи з ним. `),
            sentence(`Немає сенсу позбуватись коментарів для рядків чи блоків: ніхто не подякує вам за це. `),
            sentence(`А якщо у вас вже є коментарі для блоків, то зробіть можливими вкладені та багаторівневі коментарі. `),
            sentence(`Це зовсім не складно в реалізації, зате обов'язково знайдуться ті, хто оцінить це. `),
            sentence(`Тому якщо ви займаєтесь розробкою нового або запозиченого синтаксису не полінуйтесь витратити кілька годин на хороші коментарі. `),
            sentence(`З ними мови стають лише кращі. `),
        ]),
    ]),
])
