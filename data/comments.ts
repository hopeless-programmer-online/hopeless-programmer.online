import { illustration, paragraph, sentence, link, section, article, note, list, ref, fig, neg, kw, cm, cpp, c, f, v, lt, js, emp, code, cs, py } from "../classes/shortcuts";

export default article([ `Думки вголос. `, `Коментарі. ` ], { created : new Date() }, ...[
    section(``, ...[
        paragraph(...[
            sentence(``),
            sentence(``),
            sentence(``),
        ]),
    ]),
    section(`Жити без коментарів можна, але сумно. `, ...[
        paragraph(...[
            sentence(`Найгірша можлива ситуація для мови - це повна відсутність в ній коментарів. `),
            sentence(`І JSON чудовий цьому приклад. `),
            sentence(`Простота зробила його чи не стандартним форматом для різноманітного роду конфігураційних файлів і повідомлень, але неможливість додавати коментарі створює величезні незручності в роботі з ним. `),
            sentence(`Без них неможливо ні додати нотатки стосовно того чи іншого поля, ні перелічити його можливі значення, ні тримати в коді альтернативні, наперед заготовані конфігурації. `),
        ]),
        paragraph(...[
            sentence(`Аргументом проти додавання в JSON коментарів була неможливість їх однозначного збереження після читання з файлу. `),
            sentence(`Оскільки під час цього текст перетворюється у внутрішнє для мови представлення`, note(`Наприклад, набір об'єктів та примітивів JavaScript. `), ` інформація про коментарі та їх розміщення втрачається. `),
            sentence(`Відповідно, коментарі не лише буде неможливо використати при роботі з цим представленням, але й проста операція читання JSON з файлу і його ж збереження без внесення будь яких видимих змін буде видаляти з файлу коментарі. `),
            sentence(`Для когось це може бути досить неочікувано. `),
        ]),
        paragraph(...[
            sentence(`Але найбільше розчарування полягає в тому, що подібна операція в будь якому випадку видаляє з файлу деяку інформацію. `),
            sentence(`Наприклад, інформацію про форматування або закінчення рядків. `),
            sentence(`Якби JSON допускав коментарі то принципово нічого не змінилося б: він не перестав би бути однозначним форматом `, fig(`без втрат`), `. `),
            sentence(`Він ніколи таким і не був. `),
            sentence(`Але коментарями могли б принаймні скористатись ті, хто використовує JSON лише для читання. `),
        ]),
        paragraph(...[
            sentence(`В решті-решт ніхто не забороняє написати парсер, який зберігає форматування та коментарі і може відновити їх. `),
            sentence(`Але тепер пізно: JSON без коментарів роками використовується в найрізноманітніших програмах які перестануть працювати, якщо у ньому з'являться коментарі. `),
            sentence(`Декого це дратує настільки, що вони обирають новіші формати`, note(`Наприклад, JSON5. `), ` або використовують нестандартні парсери`, note(`Наприклад, TypeScript та ESLint допускають в своїх конфігураційних JSON файлах коментарі. `), `, які вміють розпізнавати коментарі. `),
        ]),
    ]),
    section(`Неповноцінність.`, ...[
        paragraph(...[
            sentence(`Навіть якщо в мові є коментарі це ще не означає, що вони будуть зручними. `),
            sentence(`Мови HTML та XML схожі навіть в недоліках, адже обоє дозволяють лише коментарі для блоків: `, code(`HTML`, cm(`<!-- -->`)), `. `),
            sentence(`Це робить їх схожими на теги, але аж ніяк не додає зручності. `),
            sentence(`Схожа проблема існує і в CSS, яка до певного моменту підтримувала лише коментарі для блоків `, code(`CSS`, cm(`/* */`)), ` і не вміла працювати з `, code(`CSS`, cm(`//`)), `. `),
            sentence(`Згодом така можливість з'явилась, але замість коментування рядків запис `, code(`CSS`, cm(`//`)), ` вимикає цілу конструкцію, перед якою з'являється. `),
            sentence(`Ось це справді неочікувано, на відміну від зникнення коментарів з JSON файлу! `),
        ]),
        paragraph(...[
            sentence(`Одні лише коментарі можуть стати причиною використовувати замість CSS альтернативи, такі як SASS або LESS. `),
            sentence(`Але існують й обернені випадки: Python натомість підтримує лише коментарі для рядків `, py(cm(`#`)), `. `),
            sentence(`Звичайно, форматування відіграє важливу роль в цій мові, але все ж необхідність коментувати кожен окремий рядок не є тим, чим варто пишатись. `),
        ]),
    ]),
    section(`Копіювання недоліків.`, ...[
        paragraph(...[
            sentence(`C, C++, JavaScript, TypeScript, Java, C#`),
            sentence(`Вкладені коментарі в HTML, XML та CSS. `),
            sentence(``),
        ]),
    ]),
    section(`Винятки з правила.`, ...[
        paragraph(...[
            sentence(`Haskell, Lua, Kotlin`),
            sentence(``),
            sentence(``),
        ]),
    ]),
    section(`Підсумки.`, ...[
        paragraph(...[
            sentence(`Коментарі необхідні. `),
            sentence(`Не лише як коментарі. `),
            sentence(`Коментування рядків. `),
            sentence(`Коментування блоків. `),
            sentence(`Коментування інструкцій. `),
            sentence(`Вкладені коментарі. `),
            sentence(`Коментарі та стрічки. `),
            sentence(`Багаторівневі коментарі. `),
            sentence(`Аналогія з сирими стрічками. `),
        ]),
    ]),
])
