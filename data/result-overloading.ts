import { code, illustration, p, sen, link, section, article, note } from "../classes/shortcuts";

const overload = 'https://uk.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B5%D0%B2%D0%B0%D0%BD%D1%82%D0%B0%D0%B6%D0%B5%D0%BD%D0%BD%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D1%96%D1%97'
const operator_overload = 'https://uk.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B5%D0%B2%D0%B0%D0%BD%D1%82%D0%B0%D0%B6%D0%B5%D0%BD%D0%BD%D1%8F_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%96%D0%B2'

const note_1 = note(sen(`Я буду використовувати терміни перевантаження або перевантаження функцій маючи на увазі загальний підхід, який також включає перевантаження методів, `, link(operator_overload, `операторів`), `, функторів, etc.`))

export default article([ sen(`Думки вголос. `), sen(`Перевантаження за результатом. `), ], ...[
    section([], ...[
        p(
            sen(`Деякі зі статично-типізованих мов програмування підтримують механізм `, link(overload, `перевантаження функцій`), note_1, `. `),
            `Це виражається в тому, що під одним іменем можна оголосити декілька функцій, які будуть відрізнятись за кількістю аргументів або типами цих аргументів. `,
            `Характерною ознакою конкретно такої реалізації є те, що перевантаження ігнорує результат. `,
            `Наслідком такого підходу є неможливість існування двох функцій з однаковими іменами, які відрізняються лише типом результату (див. Приклад коду №1). `,
            `Метою цієї сторінки є висловлення ідеї, що подібне обмеження – нісенітниця. `,
        ),
        illustration(`Приклад коду №1`,
            `Використання перевантажених за результатом функцій в представленні художника. `,
            code(`C++`,
                'int   f() {',
                '    return 1;',
                '}',
                'float f() {',
                '    return 2.0;',
                '}',
                '',
                'int   x = f();',
                'float y = f();',
                '',
                'print(x); // 1',
                'print(y); // 2',
            ),
        ),
    ]),
])
