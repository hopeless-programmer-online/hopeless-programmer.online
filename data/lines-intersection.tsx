import { article, illustration, note, paragraph, section, sentence, tex, } from "../classes/shortcuts";
import Intersection from './lines-intersection/intersection'

const r = String.raw
const ab = tex(r`\vec{ab}`)
const uv = tex(r`\vec{uv}`)
const x = tex(r`\vec{x}`)
const t = tex(r`t`)
const q = tex(r`q`)
const b_a = tex(r`\vec{b} - \vec{a}`)
const v_u = tex(r`\vec{v} - \vec{u}`)

const system_1 = illustration(sentence(`Система рівнянь, що описує точку `, x, ` на прямих `, ab, ` та `, uv, `. `), tex(r`
    \begin{cases}
        \vec{x} = \vec{a} + t(\vec{b} - \vec{a})
        \\
        \vec{x} = \vec{u} + q(\vec{v} - \vec{u})
    \end{cases}
`))
const system_2 = illustration(sentence(`Система після зведення. `), tex(r`
    \vec{a} + t(\vec{b} - \vec{a}) = \vec{u} + q(\vec{v} - \vec{u})
`))
const system_3 = illustration(sentence(`Заміна для відомих `, b_a, ` та `, v_u, `. `), tex(r`
    \begin{cases}
        \vec{d} &= \vec{b} - \vec{a}
        \\
        \vec{w} &= \vec{v} - \vec{u}
        \\
        t\vec{d} - q\vec{w} &= \vec{u} - \vec{a}
    \end{cases}
`))

export default article(`Знаходження точки перетину прямих. `, ...[
    section(`Навіщо це потрібно? `, ...[
        paragraph(...[
            sentence(`Навіть при написанні дуже простої гри на кшталт пінг-понгу може виникнути потреба в математиці, яку ми не звикли використовувати в повсякденному житті - лінійній алгебрі. `),
            sentence(`Зокрема, це може знадобитись для того аби обчислити точне місце зіткнення м'яча з ракеткою або межами ігрового поля. `),
            sentence(`І це відносно легко зробити якщо представити м'яч у вигляді точки що рухається по прямій а поверхню з якої він зіштовхується - у вигляді прямої обмеженої двома точками. `),
        ]),
    ]),
    section(`Представлення. `, ...[
        paragraph(...[
            sentence(`Обчислення які ми будемо проводити залежать від розмірності простору, адже дві прямі можуть перетинатись як в двовимірному просторі, так і в тривимірному або й навіть в просторах більшої розмірності. `),
            sentence(`Але навіщо обмежувати себе якоюсь певною розмірністю, якщо можна вирішити завдання для довільного випадку? `),
            sentence(`Тому наші обчислення не будуть залежати від розмірності простору. `),
            sentence(`Але варто зауважити, що для перетину дві прямі повинні лежати в одній площині, що, по-перше, дуже малоймовірно для довільних прямих та по-друге має свої обмеження при обчисленнях з використанням чисел з плавучою комою. `),
        ]),
        paragraph(...[
            sentence(`Траєкторією руху м'яча ми будемо вважати пряму `, ab, `, а перешкодою з якою він буде зіштовхуватися - пряму `, uv, `. `),
            sentence(`Нам потрібно визначити чи ці дві прямі взагалі перетинаються і якщо це так - також точку цього перетину `, x, `. `),
            sentence(`Оскільки `, x, ` може розміщуватись на `, ab, ` в будь якому місці ми запишемо її розташування у вигляді функції `, tex(r`\vec{x} = \vec{a} + t(\vec{b} - \vec{a})`), `, де `, tex(r`t \in [0, 1]`), `. `),
            sentence(`Хоча ця точка також лежатиме і на `, uv, ` і її розташування залежатиме від `, t, `, ми все ж поки не знаємо форми цієї залежності. `),
            sentence(`Тому ми опишемо `, x, ` на `, uv, ` через функцію `, tex(r`\vec{x} = \vec{u} + q(\vec{v} - \vec{u})`), ` з окремою змінною `, tex(r`q \in [0, 1]`), `. `),
        ]),
    ]),
    section(`Обчислення. `, ...[
        paragraph(...[
            sentence(`Тепер можна почати пошук `, x, `. `),
            sentence(`Для цього ми запишемо наші прямі `, ab, ` та `, uv, ` в систему рівнянь (див. `, system_1, `) та спробуємо її розв'язати, тобто знайти функцію яка б повертала нам `, x, `. `),
            sentence(`Її одразу ж можна звести до єдиного рівняння (див. `, system_2, `), що залежить від `, t, ` та `, q, ` і почати шукати їх `, note(`Адже знаючи принаймні одну з цих змінних ми можемо знайти й `, x, `. `), `. `),
            sentence(`Спочатку перенесемо всі шукані доданки в праву частину рівняння та зробимо заміну (див. `, system_3, `) для відомих `, b_a, ` та `, v_u, `. `),
            sentence(``),
        ]),
        system_1,
        system_2,
        system_3,
        paragraph(...[
            sentence(``),
            sentence(``),
            sentence(``),
        ]),
    ]),
    section(``, ...[
        paragraph(...[
            sentence(``),
            sentence(``),
            sentence(``),
        ]),
        illustration('lol kek', Intersection),
    ]),
    section(``, ...[
        paragraph(...[
            sentence(``),
            sentence(``),
            sentence(``),
        ]),
        paragraph(...[
            sentence(``),
            sentence(``),
            sentence(``),
        ]),
    ]),
])
